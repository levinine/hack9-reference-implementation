openapi: "3.0.0"
info:
  version: 1.0.0
  title: Reference implementation
  license:
    name: MIT
servers:
  - url: https://hack9.levi9.com/reference
paths:
  /reset:
    post:
      summary: "Reset system state"
      description: "Delete all prior records of calls and invoices made and bring system to initial state."
      operationId: reset
      tags:
        - system
      responses:
        201:
          description: "System state was cleared and the server is ready."
              
  /switch/price:
    get:
      summary: "Get call price"
      description: "Get (potential) call price for the given called number, per minute. This will not initiate a call."
      operationId: getPrice
      tags:
        - call
      parameters:
        - name: number
          in: query
          required: true
          schema:
            type: string
            format: telephone
          description: "Telephone number to call, for which the call price should be returned."
          example: "38121123456"
        - name: time
          in: query
          schema:
            type: string
            format: date-time
          description: "date and time of the call, in RFC-3339 format, section 5.6. If ommitted, default value is NOW."
          example: "2019-04-03T12:34:56.00Z"
      responses:
        200:
          description: "Price of a call, per second"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Price"
        404:
          description: "Price for the number cannot be calculated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        400:
          description: "Call number is invalid format"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
 
  /switch/call:
    post:
      summary: "Register a call"
      description: "Register details of a call that was made and calcualte the cost of the call."
      operationId: registerCall
      tags:
        - call
      requestBody:
        description: "One call to register."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Call"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CallCost"
          description: "Call accepted"
        400:
          description: "Incorrect input"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: "Error occurred"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              
  /financial/invoice:
    post:
      summary: "Generate invoice"
      description: "Initiate invoice generation for all calls initiated within the given period. For each calling number and given period, one invoice needs to be generated. Each invoice has a unique ID. When invoices generation is finished, given callback URL should be called. It will signal the client (judge) that the invoice generation is done."
      operationId: createInvoice
      tags:
        - financial
      requestBody:
        description: "Invoice request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceRequest"
        required: true
      responses:
        202:
          description: "Invoice creation is underway."
        400:
          description: "Bad parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      callbacks:
        invoicingDone:
          '{$request.body#/callback}':
            post:
              requestBody:
                description: "Invoice report to submit to control server."
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Invoices"
              responses:
                204:
                  description: "Invoice report accepted"
              
  /financial/invoice/{id}:
    get:
      summary: "Get the invoice"
      description: "Get the invoice with the given ID"
      operationId: getInvoice
      parameters:
        - name: id
          in: path
          required: true
          description: "Invoice ID"
          example: "INV_2019-03-02_38121123456"
          schema:
            type: string
      tags:
        - financial
      responses:
        200:
          description: "Invoice with the given ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        404:
          description: "No such invoice ID."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
            
  /financial/report/{calling}:
    get:
      summary: "Get financial status of the calling number (client)."
      description: "Get all previous invopices and current, uninvoiced calls of the given number."
      operationId: getReport
      tags:
        - financial
      parameters:
        - name: calling
          schema:
            type: string
            format: telephone
          required: true
          in: path
          description: "Calling number"
          example: "38121123456"
      responses:
        200:
          description: "Report status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        404:
          description: "Unknown report"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /listing/{calling}:
    get:
      summary: "Listing of calls"
      description: "Listing of calls made by the given telephone number"
      operationId: listing
      tags:
        - call
      parameters:
        - name: calling
          description: "The calling number for which to list calls"
          example: "38121123456"
          in: path
          required: true
          schema:
            type: string
            format: telephone
        - name: from
          description: "Start of the listing period."
          example: "2019-01-01T00:00:00.00Z"
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          description: "End of listing period."
          example: "2019-05-31T23:59:59.99Z"
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: "Listing generated, even if empty."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
        
      
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: "Error message"
    Price:
      type: object
      description: "Price of the call is determined by the time when the call was made and the number that was called. Prices are matched by the longest prefix of the called number and the effective date."
      properties:
        prefix:
          type: string
          description: "Telephone number prefix this price is for."
          example: "38121"
        price:
          type: number
          format: float
          description: "Price of a phone call, per minute."
          example: 1.2
        from:
          type: string
          format: date-time
          description: "Effective date from which this price is valid."
          example: "2019-01-01T00:00:00.00Z"
        initial:
          type: number
          format: int32
          description: "Initial number of seconds for the esablishing the call."
          example: 10
        increment:
          type: number
          format: int32
          description: "Number of seconds for the call duration rounding."
          example: 5
      required:
        - prefix
        - price
        - from
        - initial
        - increment
        
    Call:
      type: object
      properties:
        calling:
          type: string
          format: telephone
          description: "Caller number, list of digits, cannot start with 0."
          example: "381211234567"
        called:
          type: string
          description: "Number being called."
          example: "38164111222333"
        start:
          type: string
          format: date-time
          description: "Start time of the call"
          example: "2019-05-23T21:03:33.30Z"
        duration:
          type: integer
          format: int32
          description: "Call duration, in seconds"
          example: 450
      required:
        - calling
        - caller
        - start
        - duration
        
    CallCost:
      type: object
      properties:
        calling:
          type: string
          format: telephone
          description: "Caller phone number"
          example: "381211234567"
        called:
          type: string
          format: telephone
          description: "Number that was dialed"
          example: "38164111222333"
        start:
          type: string
          format: date-time
          description: "Start time of the call"
          example: "2019-05-23T21:03:33.30Z"
        duration:
          type: integer
          format: int32
          description: "Call duration, in seconds"
          example: 350
        rounded:
          type: integer
          format: int32
          description: "Call duration, in seconds, with initial, rounded to increment."
          example: 355
        price:
          type: number
          format: float
          description: "Price of the call per minute, used to calculate the cost."
          example: 0.4
        cost:
          type: number
          format: float
          description: "Cost of the call that was made."
          example: 2.37
      required:
        - cost
        - calling
        - called
        - start
        - duration
          
    InvoiceRequest:
      description: "Request batch generation of invoices for all numbers and given period."
      type: object
      properties:
        start:
          type: string
          format: date-time
          description: "Start of the invoicing period."
          example: "2019-05-01T00:00:00.00Z"
        end:
          type: string
          format: date-time
          description: "End of the invoicing period"
          example: "2019-05-31T23:59:59.99Z"
        callback:
          description: "Callback URL to signal invoice completion. Callback expects a JSON of InvoiceDone"
          type: string
          format: url
          example: "http://judge-thread.hack9.levi9.com/report/invoice/g1y67aeega12384"
      required:
        - start
        - end
        - callback
    Invoices:
      description: "Report successful completion of an invoice to callback URL"
      type: object
      properties:
        master_id:
          type: string
          description: "Optional master ID of invoices."
          example: "INV_2019-05-01"
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/Invoice"
      required:
        - invoices
        
    Invoice:
      description: "One item in the invoice, related to one telephone number"
      type: object
      properties:
        id:
          type: string
          description: "Invoice ID"
          example: "INV_2019-05-01_38121123456"
        calling:
          type: string
          format: telephone
          description: "Telephone number for which the invoice is created"
          example: "381211234567"
        start:
          type: string
          format: date-time
          description: "Start period of the invoice."
          example: "2019-01-01T00:00:00.00Z"
        end:
          type: string
          format: date-time
          description: "End period of the invoice."
          example: "2019-01-31T23:59:59.99Z"
        sum:
          type: number
          format: float
          description: "Amount to be payed for the invoice"
          example: 1341.33
        count:
          type: integer
          format: int32
          description: "Number of calls made during the invoicing period."
          example: 2319
      required:
        - id
        - calling
        - start
        - end
        - sum
        - count

    Report:
      description: "Report for one telephone number"
      type: object
      properties:
        calling:
          type: string
          format: telephone
          description: "The number for which to generate the report."
          example: "381211234567"
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/ReportInvoiceItem"
        remaining:
          type: number
          format: float
          description: "The sum of cost of un-invoiced calls for the gien number."
          example: 34.23
      required:
        - calling
        - invoices
        - remaining
        
    ReportInvoiceItem:
      description: "One invoice related item in the report"
      type: object
      properties:
        id:
          type: string
          description: "Invoice ID"
          example: "INV_2019-04-01_38121123456"
        sum:
          type: number
          format: float
          description: "Sum on the invoice"
          example: 231.22
      required:
        - id
        - sum
          
    Listing:
      description: "Status of the report being generated, with location, if done."
      type: object
      properties:
        calling:
          type: string
          format: telephone
          description: "The phone/client we generate the listing for."
          example: "381211234567"
        calls:
          type: array
          items:
            $ref: "#/components/schemas/CallCost"
      required:
        - calling
        - calls